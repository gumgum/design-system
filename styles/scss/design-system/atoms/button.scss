// Base button
@mixin defaultShadows($borderColor, $dropShadow, $focusGlow, $hasBorder) {
    @if $hasBorder == "true" {
        box-shadow: inset 0 #{-$cap-size} 0 0 $borderColor,  // Bottom Cap
                    inset 0 0 0 1px $borderColor, // Other Caps
                    0 0 0px 1px rgba($focusGlow,0),  // Focus Ring
                    0 0 0px 0 rgba($dropShadow, 0)  // Drop Shadow
    }
    else {
        box-shadow: inset 0 #{-$cap-size} 0 0 $borderColor,  // Bottom Cap
                    0 0 0px 1px rgba($focusGlow,0),  // Focus Ring
                    0 0 0px 0 rgba($dropShadow, 0)  // Drop Shadow
    }
}
@mixin hoverShadows($borderColor, $dropShadow, $focusGlow, $hasBorder) {
    @if $hasBorder == "true" {
        box-shadow: inset 0 #{-$cap-size * 1.5} 0 0 $borderColor,  // Bottom Cap
                    inset 0 0 0 1px $borderColor, // Other Caps
                    0 0 0px 1px rgba($focusGlow,0),  // Focus Ring
                    0 0 3px 0 rgba($dropShadow, 0.2)  // Drop Shadow
    }
    else {
        box-shadow: inset 0 #{-$cap-size * 1.5} 0 0 $borderColor,  // Bottom Cap
                    0 0 0px 1px rgba($focusGlow,0),  // Focus Ring
                    0 0 3px 0 rgba($dropShadow, 0.2)  // Drop Shadow
    }
}
@mixin hoverFocusShadows($borderColor, $dropShadow, $focusGlow, $hasBorder) {
    @if $hasBorder == "true" {
        box-shadow: inset 0 #{-$cap-size * 1.5} 0 0 $borderColor,  // Bottom Cap
                    inset 0 0 0 1px $borderColor, // Other Caps
                    0 0 1px 1px rgba($focusGlow,1),  // Focus Ring
                    0 0 3px 0 rgba($dropShadow, 0.2)  // Drop Shadow
    }
    else {
        box-shadow: inset 0 #{-$cap-size * 1.5} 0 0 $borderColor,  // Bottom Cap
                    0 0 1px 1px rgba($focusGlow,1),  // Focus Ring
                    0 0 3px 0 rgba($dropShadow, 0.2)  // Drop Shadow
    }
}
@mixin activeShadows($borderColor, $dropShadow, $focusGlow, $hasBorder) {
    @if $hasBorder == "true" {
        box-shadow: inset 0 #{-$cap-size * 0.5} 0 0 $borderColor,  // Bottom Cap
                    inset 0 0 0 1px $borderColor, // Other Caps
                    0 0 0px 1px rgba($focusGlow,0),  // Focus Ring
                    0 0 1px 0 rgba($dropShadow, 0.4)  // Drop Shadow
    }
    else {
        box-shadow: inset 0 #{-$cap-size * 0.5} 0 0 $borderColor,  // Bottom Cap
                    0 0 0px 1px rgba($focusGlow,0),  // Focus Ring
                    0 0 1px 0 rgba($dropShadow, 0.4)  // Drop Shadow
    }
}
@mixin focusShadows($borderColor, $dropShadow, $focusGlow, $hasBorder) {
    @if $hasBorder == "true" {
        box-shadow: inset 0 #{-$cap-size} 0 0 $borderColor,  // Bottom Cap
                    inset 0 0 0 1px $borderColor, // Other Caps
                    0 0 1px 1px rgba($focusGlow,1),  // Focus Ring
                    0 0 0px 0 rgba($dropShadow, 0)  // Drop Shadow
    }
    else {
        box-shadow: inset 0 #{-$cap-size} 0 0 $borderColor,  // Bottom Cap
                    0 0 1px 1px rgba($focusGlow,1),  // Focus Ring
                    0 0 0px 0 rgba($dropShadow, 0)  // Drop Shadow
    }
}

.gds-button {
    font-family: $pri-font-regular;
    display: inline-block;
    font-weight: normal;
    font-size: $btn-font-size-normal;
    padding: $btn-padding-normal;
    line-height: 1.2;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    cursor: pointer;
    position: relative;
    top: 0;
    margin-bottom: ($cap-size * 1.5);
    border-radius: $btn-border-radius;
    border: none;
    text-rendering: optimizeLegibility;
    letter-spacing: 0.03em;
    text-shadow: 0px 1px 1px rgba(0,0,0,0.4);
    text-transform: none;
    overflow: visible;
    color: white;
    -ms-touch-action: manipulation;
    touch-action: manipulation;
    // box-shadow:inset 0px #{-$cap-size} 0px 0px $gg-light-3;
    @include no-select();
    @include transition-ease-out(all,250ms);

    &:hover {
        background-color: $gg-light-1;
        box-shadow: 0 0 5px 0 rgba(0,0,0,0.2), inset 0 0 120px 0 rgba(255,255,255,0.35);
        text-shadow: 0 1px 1px rgba(0, 0, 0, 0.6);
    }

    &:focus {
        outline: none;
    }

    &:active {
    }

    > .fa {
        vertical-align: middle;
    }
}

.gds-button--inline-form-shift {
    transform: translateY(0px);
}

.gds-button--no-grow:hover {
    top: 0;
}

.gds-button--border {
    border-width: 1px;
    border-style: solid;
}

// Disabled buttons
.gds-button[disabled="disabled"],
.gds-button[disabled],
.gds-button--disabled {
    @extend .-disabled;

    &:hover {
        box-shadow: none;
    }
}

// Large buttons
.gds-button--lg {
    font-size: $btn-font-size-large;
    padding: $btn-padding-large;
}


// Small buttons
.gds-button--sm {
    font-size: $btn-font-size-small;
    padding: $btn-padding-small;
}

// X-small buttons
.gds-button--xs {
    font-size: $btn-font-size-xsmall;
    padding: $btn-padding-xsmall;
}

// Plain buttons
.gds-button--default {
    background-color: $gg-light-1;
    color: $primaryColor;
    text-shadow: none;
    @include defaultShadows($gg-light-4, black, $primaryLight2Color, "true");
    &:hover {
        background-color: mix($gg-light-1, white, 50%);
        text-shadow: none;
        @include hoverShadows($gg-light-4, black, $primaryLight2Color, "true");
    }
    &:focus:hover {
        background-color: mix($gg-light-1, white, 50%);
        text-shadow: none;
        @include hoverFocusShadows($gg-light-4, black, $primaryLight2Color, "true");
    }
    &:active,
    &:active:focus {
        text-shadow: none;
        @include activeShadows($gg-light-4, black, $primaryLight2Color, "true");
    }
    &:focus {
        background-color: mix($gg-light-1, white, 50%);
        text-shadow: none;
        @include focusShadows($gg-light-4, black, $primaryLight2Color, "true");
    }
}

// Button toggle
.gds-button--dark-toggle {
    @extend .gds-button--dark;
    color: $gg-light-4;
    &:hover,
    &.gds-button--active {
        @extend .gds-button--primary;
        color: white;
    }
}

// Button-capped inputs
.gds-button--button-cap {
    flex-basis: auto;
    margin-bottom: 0;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    //height: $input-height-md;
}

.gds-button--outline {
    background-color: transparent;
    text-shadow: none;
    color: $primaryColor;
    @include defaultShadows($gg-light-2, black, $primaryLight2Color, "true");
    &:hover {
        background-color: transparent;
        text-shadow: none;
        @include hoverShadows($primaryColor, black, $primaryLight2Color, "true");
    }
    &:focus:hover {
        background-color: transparent;
        text-shadow: none;
        @include hoverFocusShadows($primaryColor, black, $primaryLight2Color, "true");
    }
    &:active,
    &:active:focus {
        background-color: transparent;
        text-shadow: none;
        @include activeShadows($primaryColor, black, $primaryLight2Color, "true");
    }
    &:focus {
        background-color: transparent;
        text-shadow: none;
        @include focusShadows($primaryColor, black, $primaryLight2Color, "true");
    }
}

.gds-button--gray {
    background-color: $gg-light-3;
    @include defaultShadows($gg-light-4, black, $primaryLight2Color, "true");
    &:hover {
        background-color: $gg-light-2;
        @include hoverShadows($gg-light-4, black, $primaryLight2Color, "true");
    }
    &:focus:hover {
        background-color: $gg-light-2;
        @include hoverFocusShadows($gg-light-4, black, $primaryLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($gg-light-4, black, $primaryLight2Color, "true");
    }
    &:focus {
        background-color: $gg-light-2;
        @include focusShadows($gg-light-4, black, $primaryLight2Color, "true");
    }
}

.gds-button--white {
    background-color: rgba(white,0);
    color: white;
    @include defaultShadows(white, black, white, "true");
    &:hover {
        background-color: rgba(white,0.25);
        @include hoverShadows(white, black, white, "true");
    }
    &:focus:hover {
        background-color: rgba(white,0.25);
        @include hoverFocusShadows(white, black, white, "true");
    }
    &:active,
    &:active:focus {
        background-color: rgba(white,0.25);
        @include activeShadows(white, black, white, "true");
    }
    &:focus {
        background-color: rgba(white,0.25);
        @include focusShadows(white, black, white, "true");
    }
}

// Button toggle
.gds-button--toggle {
    @extend .gds-button--gray;

    &.gds-button--active {
        @extend .gds-button--primary;
    }
}

// Text color toggle
.gds-button--text-toggle {
    color: $gg-light-2;

    &.gds-button--active-success {
        color: $successColor;
    }
}

// Primary buttons
.gds-button--primary {
    background-color: $primaryColor;
    @include defaultShadows($primaryDark3Color, black, $primaryLight2Color, "true");
    &:hover {
        background-color: $primaryLight3Color;
        @include hoverShadows($primaryDark3Color, black, $primaryLight2Color, "true");
    }
    &:focus:hover {
        background-color: $primaryLight3Color;
        @include hoverFocusShadows($primaryDark3Color, black, $primaryLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($primaryDark3Color, black, $primaryLight2Color, "true");
    }
    &:focus {
        background-color: $primaryLight3Color;
        @include focusShadows($primaryDark3Color, black, $primaryLight2Color, "true");
    }
}

// Secondary buttons
.gds-button--secondary {
    background-color: $secondaryColor;
    @include defaultShadows($secondaryDark3Color, black, $secondaryLight2Color, "true");
    &:hover {
        background-color: $secondaryLight3Color;
        @include hoverShadows($secondaryDark3Color, black, $secondaryLight2Color, "true");
    }
    &:focus:hover {
        background-color: $secondaryLight3Color;
        @include hoverFocusShadows($secondaryDark3Color, black, $secondaryLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($secondaryDark3Color, black, $secondaryLight2Color, "true");
    }
    &:focus {
        background-color: $secondaryLight3Color;
        @include focusShadows($secondaryDark3Color, black, $secondaryLight2Color, "true");
    }
}

// Tertiary buttons
.gds-button--tertiary {
    background-color: $tertiaryColor;
    @include defaultShadows($tertiaryDark3Color, black, $tertiaryLight2Color, "true");
    &:hover {
        background-color: $tertiaryLight3Color;
        @include hoverShadows($tertiaryDark3Color, black, $tertiaryLight2Color, "true");
    }
    &:focus:hover {
        background-color: $tertiaryLight3Color;
        @include hoverFocusShadows($tertiaryDark3Color, black, $tertiaryLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($tertiaryDark3Color, black, $tertiaryLight2Color, "true");
    }
    &:focus {
        background-color: $tertiaryLight3Color;
        @include focusShadows($tertiaryDark3Color, black, $tertiaryLight2Color, "true");
    }
}

// Success buttons
.gds-button--success {
    background-color: $successColor;
    @include defaultShadows($successDark3Color, black, $successLight2Color, "true");
    &:hover {
        background-color: $successLight3Color;
        @include hoverShadows($successDark3Color, black, $successLight2Color, "true");
    }
    &:focus:hover {
        background-color: $successLight3Color;
        @include hoverFocusShadows($successDark3Color, black, $successLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($successDark3Color, black, $successLight2Color, "true");
    }
    &:focus {
        background-color: $successLight3Color;
        @include focusShadows($successDark3Color, black, $successLight2Color, "true");
    }
}

// Danger buttons
.gds-button--danger {
    background-color: $dangerColor;
    @include defaultShadows($dangerDark3Color, black, $dangerLight2Color, "true");
    &:hover {
        background-color: $dangerLight3Color;
        @include hoverShadows($dangerDark3Color, black, $dangerLight2Color, "true");
    }
    &:focus:hover {
        background-color: $dangerLight3Color;
        @include hoverFocusShadows($dangerDark3Color, black, $dangerLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($dangerDark3Color, black, $dangerLight2Color, "true");
    }
    &:focus {
        background-color: $dangerLight3Color;
        @include focusShadows($dangerDark3Color, black, $dangerLight2Color, "true");
    }
}

// Warning buttons
.gds-button--warning {
    background-color: $warningColor;
    @include defaultShadows($warningDark3Color, black, $warningLight2Color, "true");
    &:hover {
        background-color: $warningLight3Color;
        @include hoverShadows($warningDark3Color, black, $warningLight2Color, "true");
    }
    &:focus:hover {
        background-color: $warningLight3Color;
        @include hoverFocusShadows($warningDark3Color, black, $warningLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($warningDark3Color, black, $warningLight2Color, "true");
    }
    &:focus {
        background-color: $warningLight3Color;
        @include focusShadows($warningDark3Color, black, $warningLight2Color, "true");
    }
}

// Info buttons
.gds-button--info {
    background-color: $infoColor;
    @include defaultShadows($infoDark3Color, black, $infoLight2Color, "true");
    &:hover {
        background-color: $infoLight3Color;
        @include hoverShadows($infoDark3Color, black, $infoLight2Color, "true");
    }
    &:focus:hover {
        background-color: $infoLight3Color;
        @include hoverFocusShadows($infoDark3Color, black, $infoLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($infoDark3Color, black, $infoLight2Color, "true");
    }
    &:focus {
        background-color: $infoLight3Color;
        @include focusShadows($infoDark3Color, black, $infoLight2Color, "true");
    }
}

.gds-button--dark {
    background-color: transparent;
    color: $primaryColor;
    @include defaultShadows($gg-light-4, black, $primaryLight2Color, "true");
    &:hover {
        background-color: rgba(white, 0.05);
        @include hoverShadows($gg-light-2, black, $primaryLight2Color, "true");
    }
    &:focus:hover {
        background-color: rgba(white, 0.05);
        @include hoverFocusShadows($gg-light-2, black, $primaryLight2Color, "true");
    }
    &:active,
    &:active:focus {
        background-color: rgba(white, 0.1);
        @include activeShadows($gg-light-4, black, $primaryLight2Color, "true");
    }
    &:focus {
        background-color: rgba(white, 0.05);
        @include focusShadows($gg-light-2, black, $primaryLight2Color, "true");
    }
}

.gds-button--dark-primary {
    @extend .gds-button--dark;
    @include defaultShadows($primaryColor, black, $primaryLight2Color, "true");
    &:hover {
        @include hoverShadows($primaryLight4Color, black, $primaryLight2Color, "true");
    }
    &:focus:hover {
        @include hoverFocusShadows($primaryLight4Color, black, $primaryLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($primaryColor, black, $primaryLight2Color, "true");
    }
    &:focus {
        @include focusShadows($primaryLight4Color, black, $primaryLight2Color, "true");
    }
}

.gds-button--dark-secondary {
    color: $secondaryColor;
    @extend .gds-button--dark;
    @include defaultShadows($secondaryColor, black, $secondaryLight2Color, "true");
    &:hover {
        @include hoverShadows($secondaryLight4Color, black, $secondaryLight2Color, "true");
    }
    &:focus:hover {
        @include hoverFocusShadows($secondaryLight4Color, black, $secondaryLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($secondaryColor, black, $secondaryLight2Color, "true");
    }
    &:focus {
        @include focusShadows($secondaryLight4Color, black, $secondaryLight2Color, "true");
    }
}

.gds-button--dark-tertiary {
    color: $tertiaryColor;
    @extend .gds-button--dark;
    @include defaultShadows($tertiaryColor, black, $tertiaryLight2Color, "true");
    &:hover {
        @include hoverShadows($tertiaryLight4Color, black, $tertiaryLight2Color, "true");
    }
    &:focus:hover {
        @include hoverFocusShadows($tertiaryLight4Color, black, $tertiaryLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($tertiaryColor, black, $tertiaryLight2Color, "true");
    }
    &:focus {
        @include focusShadows($tertiaryLight4Color, black, $tertiaryLight2Color, "true");
    }
}

.gds-button--dark-success {
    color: $successColor;
    @extend .gds-button--dark;
    @include defaultShadows($successColor, black, $successLight2Color, "true");
    &:hover {
        @include hoverShadows($successLight4Color, black, $successLight2Color, "true");
    }
    &:focus:hover {
        @include hoverFocusShadows($successLight4Color, black, $successLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($successColor, black, $successLight2Color, "true");
    }
    &:focus {
        @include focusShadows($successLight4Color, black, $successLight2Color, "true");
    }
}

.gds-button--dark-warning {
    color: $warningColor;
    @extend .gds-button--dark;
    @include defaultShadows($warningColor, black, $warningLight2Color, "true");
    &:hover {
        @include hoverShadows($warningLight4Color, black, $warningLight2Color, "true");
    }
    &:focus:hover {
        @include hoverFocusShadows($warningLight4Color, black, $warningLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($warningColor, black, $warningLight2Color, "true");
    }
    &:focus {
        @include focusShadows($warningLight4Color, black, $warningLight2Color, "true");
    }
}

.gds-button--dark-danger {
    color: $dangerColor;
    @extend .gds-button--dark;
    @include defaultShadows($dangerColor, black, $dangerLight2Color, "true");
    &:hover {
        @include hoverShadows($dangerLight4Color, black, $dangerLight2Color, "true");
    }
    &:focus:hover {
        @include hoverFocusShadows($dangerLight4Color, black, $dangerLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($dangerColor, black, $dangerLight2Color, "true");
    }
    &:focus {
        @include focusShadows($dangerLight4Color, black, $dangerLight2Color, "true");
    }
}

.gds-button--dark-info {
    color: $infoColor;
    @extend .gds-button--dark;
    @include defaultShadows($infoColor, black, $infoLight2Color, "true");
    &:hover {
        @include hoverShadows($infoLight4Color, black, $infoLight2Color, "true");
    }
    &:focus:hover {
        @include hoverFocusShadows($infoLight4Color, black, $infoLight2Color, "true");
    }
    &:active,
    &:active:focus {
        @include activeShadows($infoColor, black, $infoLight2Color, "true");
    }
    &:focus {
        @include focusShadows($infoLight4Color, black, $infoLight2Color, "true");
    }
}

// Transparent link buttons
.gds-button--link {
    color: $primaryColor;
    background-color: transparent;
    border-color: $gg-light-2;
    text-shadow: none !important;
    box-shadow: none !important;
    border-width: 0;

    &:hover,
    &:active,
    &:focus,
    &:active:focus {
        text-decoration: none;
        color: $primaryLight3Color;
        top: 0;
        background: transparent;
        border-color: $primaryLight3Color;
        box-shadow: none;
    }

    &:focus,
    &:active:focus {
        border-color: $primaryLight2Color;
        box-shadow: none;
    }
}

// Close button
.gds-button--close-x {
    border: none;
    background-color: transparent !important;
    background-image: url("data:image/svg+xml;utf8,%3Csvg%20version%3D%221.1%22%20id%3D%22Layer_1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20width%3D%22100%25%22%20height%3D%22100%25%22%0A%09%20viewBox%3D%220%200%2020px%2020px%22%20preserveAspectRatio%3D%22none%22%20fill%3D%22none%22%20stroke%3D%22%23#{strip-hash($gg-light-4)}%22%20stroke-width%3D%222%22%20stroke-miterlimit%3D%2210%22%3E%0A%20%20%3Cline%20class%3D%22st0%22%20x1%3D%220.9%22%20y1%3D%221%22%20x2%3D%2219.1%22%20y2%3D%2219.2%22%2F%3E%0A%20%20%3Cline%20class%3D%22st0%22%20x1%3D%2219.1%22%20y1%3D%221%22%20x2%3D%220.9%22%20y2%3D%2219.2%22%2F%3E%0A%3C%2Fsvg%3E");
    background-repeat: no-repeat;
    background-position: 20px 20px;
    width: 60px;
    height: 60px;
    padding: 0;
    position: absolute;
    top: 0;
    right: 0;

    &:hover {
        background-image: url("data:image/svg+xml;utf8,%3Csvg%20version%3D%221.1%22%20id%3D%22Layer_1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20x%3D%220px%22%20y%3D%220px%22%20viewBox%3D%220%200%20100%25%20100%25%22%20fill%3D%22none%22%20stroke%3D%22%23#{strip-hash($primaryColor)}%22%20stroke-width%3D%222%22%20stroke-miterlimit%3D%2210%22%3E%3Cline%20class%3D%22st0%22%20x1%3D%220.9%22%20y1%3D%221%22%20x2%3D%2219.1%22%20y2%3D%2219.2%22%2F%3E%3Cline%20class%3D%22st0%22%20x1%3D%2219.1%22%20y1%3D%221%22%20x2%3D%220.9%22%20y2%3D%2219.2%22%2F%3E%3C%2Fsvg%3E");
        cursor: pointer;
    }

    &:focus {
        outline: none;
    }
}

// Get rid of focus style
.gds-button:focus,
.gds-button.focus,
.gds-button:active:focus,
.gds-button:active.focus,
.gds-button.active:focus,
.gds-button.active.focus {
    outline: none;
}

// Block buttons
.gds-button--block {
    display: block;
    width: 100%;
}

// Conditionally set buttons to display block, based on breakpoint
@media #{$phone-width} {
    .gds-button--block-xs,
    .gds-button--block-sm,
    .gds-button--block-md,
    .gds-button--block-lg,
    .gds-button--block-xl  {
        display: block;
        width: 100%;
    }
}

@media #{$phablet-width} {
    .gds-button--block-sm,
    .gds-button--block-md,
    .gds-button--block-lg,
    .gds-button--block-xl {
        display: block;
        width: 100%;
    }
}

@media #{$tablet-width} {
    .gds-button--block-md,
    .gds-button--block-lg,
    .gds-button--block-xl {
        display: block;
        width: 100%;
    }
}

@media #{$laptop-width} {
    .gds-button--block-lg,
    .gds-button--block-xl {
        display: block;
        width: 100%;
    }
}

@media #{$desktop-width} {
    .gds-button--block-xl {
        display: block;
        width: 100%;
    }
}

// Animated ellipsis, after clicking button
.gds-button .gds-button__thinking {
    font-size: 10px;
    white-space: pre;
    font-family: monospace;
}

.gds-button--large .gds-button__thinking,
.gds-button__group--large .gds-button__thinking {
    font-size: $btn-font-size-large;
}

.gds-button--small .gds-button__thinking,
.gds-button__group--small .gds-button__thinking {
    font-size: $btn-font-size-small;
}
